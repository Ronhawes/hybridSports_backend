generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model coaches {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?   @unique @db.Uuid
  bio            String?
  created_at     DateTime? @default(now()) @db.Timestamp(6)
  updated_at     DateTime? @default(now()) @db.Timestamp(6)
  name           String?
  title          String?
  sport          String?
  phoneNumber    Int?      @db.SmallInt
  profilePicture String?
  working_hrs    BigInt?
  prices         BigInt?
  users          users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_coaches_user_id")
}

model event_registrations {
  id         BigInt    @id @default(autoincrement())
  event_id   String?   @db.Uuid
  user_id    String?   @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  events     events?   @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([event_id], map: "idx_event_registrations_event_id")
  @@index([user_id], map: "idx_event_registrations_user_id")
}

model events {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title               String                @db.VarChar(255)
  description         String?
  date                DateTime              @db.Timestamp(6)
  location            String?               @db.VarChar(255)
  organizer_id        String?               @db.Uuid
  created_at          DateTime?             @default(now()) @db.Timestamp(6)
  updated_at          DateTime?             @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamptz(6)
  event_registrations event_registrations[]
  users               users?                @relation(fields: [organizer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model juniors {
  id            BigInt   @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz(6)
  fullName      String?
  age           BigInt?
  partner       String?
  coach_Academy String?
  phoneNo       BigInt?
  gender        String?
}

model menDoubles {
  id     Int    @id(map: "mendoubles_pkey") @default(autoincrement())
  rank   Int
  player String @db.VarChar(255)
  points Int
  age    Int?   @db.SmallInt
}

model menSingles {
  id     BigInt @id(map: "mensingles_pkey") @default(autoincrement())
  name   String
  age    Int
  points Int
  rank   Int
}

model mixedDoubles {
  id     Int    @id(map: "mixeddoubles_pkey") @default(autoincrement())
  rank   Int
  player String @db.VarChar(255)
  points Int
}

model trainers {
  id         BigInt    @id @default(autoincrement())
  user_id    String?   @unique @db.Uuid
  bio        String?
  specialty  String?
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)
  gender     String?   @db.VarChar
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([user_id], map: "idx_trainers_user_id")
}

model users {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String                @unique @db.VarChar(255)
  fullnames           String?               @db.VarChar
  gender              String?               @db.VarChar
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @db.Timestamptz(6)
  institution         String?
  phoneNo             BigInt?
  coaches             coaches?
  event_registrations event_registrations[]
  events              events[]
  trainers            trainers?
}

model womenDoubles {
  id     Int    @id(map: "womendoubles_pkey") @default(autoincrement())
  rank   Int
  name   String @db.VarChar(255)
  points Int
}

model womenSingles {
  id     BigInt @id @default(autoincrement())
  name   String
  age    Int
  points Int
  rank   Int
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model coachesbooking {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  fullName   String?
  idNo       BigInt?
  email      String?
  phoneNo    BigInt?
  time       String?  @db.VarChar
  coach      String?
  day        String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model courts {
  id         BigInt   @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz(6)
  fullName   String?
  idNo       BigInt?
  email      String?
  phoneNo    BigInt?
  time       String?  @db.VarChar
  court      String?
  day        String?
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model tickets {
  id                BigInt   @id @default(autoincrement())
  created_at        DateTime @default(now()) @db.Timestamptz(6)
  fullName          String?
  email             String?
  phoneNo           BigInt?
  idNo              BigInt?
  gender            String?
  country           String?
  physicalCondition String?
  price             BigInt?
}
